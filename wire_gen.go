// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/gofiber/fiber/v2"
	"github.com/google/wire"
	"matsukana.cloud/go-marketing/config"
	"matsukana.cloud/go-marketing/controller"
	"matsukana.cloud/go-marketing/database"
	"matsukana.cloud/go-marketing/repository"
	"matsukana.cloud/go-marketing/router"
	"matsukana.cloud/go-marketing/service"
)

// Injectors from injector.go:

func InitializedServer() *App {
	configConfig := config.New()
	databaseDatabase := database.New(configConfig)
	app := NewApp(configConfig, databaseDatabase)
	return app
}

func InitializedRouter() *fiber.App {
	configConfig := config.New()
	databaseDatabase := database.New(configConfig)
	marketingEventRepositoryImpl := repository.NewMarketingEventRepository(databaseDatabase)
	marketingEventServiceImpl := service.NewMarketingEventService(databaseDatabase, marketingEventRepositoryImpl)
	marketingEventControllerImpl := controller.NewMarketingEventController(marketingEventServiceImpl)
	app := router.New(marketingEventControllerImpl)
	return app
}

// injector.go:

var MarketingEventSet = wire.NewSet(repository.NewMarketingEventRepository, wire.Bind(new(repository.MarketingEventRepository), new(*repository.MarketingEventRepositoryImpl)), service.NewMarketingEventService, wire.Bind(new(service.MarketingEventService), new(*service.MarketingEventServiceImpl)), controller.NewMarketingEventController, wire.Bind(new(controller.MarketingEventController), new(*controller.MarketingEventControllerImpl)))
